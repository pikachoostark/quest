# Импорт данных в дата-фрейм.
spectre_0 <- read.table(orb0.txt, header = T, sep = " ")
# Импорт данных в дата-фрейм.
spectre_0 <- read.table(file = "orb0.txt", header = T, sep = " ")
View(spectre_0)
# Импорт данных в дата-фрейм.
spectre_0 <- read.table(file = "orb0.txt", header = F, sep = " ")
View(spectre_0)
View(spectre_0)
colnames(spectre_0) <- c("Wavelength", Reflectance)
# Импорт данных в дата-фрейм.
spectre_0 <- read.table(file = "orb0.txt", header = F, sep = " ")
colnames(spectre_0) <- c("Wavelength", "Reflectance")
head(spectre_0)
tail(spectre_0)
str(spectre_0)
summary(spectre_0)
any(!complete.cases(spectre_0))
rm(spectre_0)
# Импорт данных в дата-фрейм.
spectre_0 <- read.table(file = ".\orb0.txt", header = F, sep = " ")
# Импорт данных в дата-фрейм.
spectre_0 <- read.table(file = "~\orb0.txt", header = F, sep = " ")
# Импорт данных в дата-фрейм.
spectre_0 <- read.table(file = ".\data\orb0.txt", header = F, sep = " ")
# Импорт данных в дата-фрейм.
spectre_0 <- read.table(file = "~\data\orb0.txt", header = F, sep = " ")
getwd()
# Импорт данных в дата-фрейм.
spectre_0 <- read.table(file = "./data/orb0.txt", header = F, sep = " ")
rm(spectre_0)
# Импорт данных в дата-фрейм.
spectre_0 <- read.table(file = "./data/orb0.txt", header = F, sep = " ")
colnames(spectre_0) <- c("Wavelength", "Reflectance")
str(spectre_0)     # Проверим правильность типов данных
head(spectre_0)
tail(spectre_0)
summary(spectre_0) # Проверим наличие аномальных значений
any(!complete.cases(spectre_0)) # Проверим наличие пропущенных значений
head(spectre_0["Wavelength"])
approx(spectre_0["Wavelength"], 1644)
# Очистка значений, проверка типов.
checker <- matrix(c(1,2,3,4,6,1,4,9,16,36), nrow = 2)
checker
# Очистка значений, проверка типов.
checker <- matrix(c(1,2,3,4,6,1,4,9,16,36), nrow = 2, by_row = T)
# Очистка значений, проверка типов.
checker <- matrix(c(1,2,3,4,6,1,4,9,16,36), nrow = 2, byrow = T)
checker
which.min(spectre_0["Wavelength"]>1429)
which.max(spectre_0["Wavelength"]<1429)
any(spectre_0["Wavelength"]==1429)
spectre_0["Wavelength"][335]
spectre_0[335]
spectre_0[335:335]
spectre_0[,335]
spectre_0[335, -1]
spectre_0[335, 1:2]
spectre_0[335:336, 1:2]
spectre_0[334:335, 1:2]
which.max(spectre_0["Wavelength"]>1429)
which.min(spectre_0["Wavelength"]<1429)
which.min(spectre_0["Wavelength"]>1429)
which.max(spectre_0["Wavelength"]<1429)
which.min(spectre_0["Wavelength"]>=1429)
which.max(spectre_0["Wavelength"]<=1429)
which.min(spectre_0["Wavelength"]>1429.000)
which.max(spectre_0["Wavelength"]<1429.000)
which.min(spectre_0["Wavelength"]<1429.000)
spectre_0[c(1,335), 1:2]
1644.214<1429.000
1428.214<1429.000
filter(spectre_0, (Wavelength > 1428 & Wavelength < 1430) |
(Wavelength > 1384 & Wavelength < 1386) ) |
(Wavelength > 1442 & Wavelength < 1444))
filter(spectre_0, (Wavelength > 1428 & Wavelength < 1430) |
(Wavelength > 1384 & Wavelength < 1386) |
(Wavelength > 1442 & Wavelength < 1444))
filter(spectre_0, ("Wavelength" > 1428 & "Wavelength" < 1430) |
("Wavelength" > 1384 & "Wavelength" < 1386) |
("Wavelength" > 1442 & "Wavelength" < 1444))
View(spectre_0)
View(spectre_0)
# Импорт данных в дата-фрейм.
spectre_0 <- read.table(file = "./data/orb0.txt", header = F, sep = " ")
library(dplyr)
install.packages("dplyr", dependencies = T)
library(dplyr)
filter(spectre_0, ("Wavelength" > 1428 & "Wavelength" < 1430) |
("Wavelength" > 1384 & "Wavelength" < 1386) |
("Wavelength" > 1442 & "Wavelength" < 1444))
filter(spectre_0, ("Wavelength" > 1428 & "Wavelength" < 1430) |
("Wavelength" > 1384 & "Wavelength" < 1386) |
("Wavelength" > 1442 & "Wavelength" < 1444))
filter(spectre_0, ("Wavelength" > 1428 & "Wavelength" < 1430))
filter(spectre_0, (("Wavelength" > 1428) & ("Wavelength" < 1430))
filter(spectre_0, (("Wavelength" > 1428) & ("Wavelength" < 1430)))
filter(spectre_0, (("Wavelength" > 1428) & ("Wavelength" < 1430)))
filter(spectre_0, (("Wavelength" > 1428) && ("Wavelength" < 1430)))
filter(spectre_0, ((Wavelength > 1428) && ("Wavelength" < 1430)))
rm(checker)
rm(spectre_0)
library(dplyr)
# Импорт данных в дата-фрейм.
spectre_0 <- read.table(file = "./data/orb0.txt", header = F, sep = " ")
colnames(spectre_0) <- c("Wavelength", "Reflectance")
filter(spectre_0, (("Wavelength" > 1428) && ("Wavelength" < 1430)))
filter(spectre_0, ((Wavelength > 1428) && (Wavelength < 1430)))
filter(spectre_0, ((Wavelength > 1428) & (Wavelength < 1430)))
filter(spectre_0, ((Wavelength > 1428) & (Wavelength < 1430)) |
(Wavelength > 1384 & Wavelength < 1386) |
(Wavelength > 1442 & Wavelength < 1444))
filter(spectre_0, ((Wavelength > 1428) & (Wavelength < 1430)) |
(Wavelength > 1384 & Wavelength < 1386) |
(Wavelength > 1442 & Wavelength < 1444))
filter(spectre_0, ((Wavelength > 1428) & (Wavelength < 1430))
filter(spectre_0, ((Wavelength > 1428) & (Wavelength < 1430)))
filter(spectre_0, ((Wavelength > 1428) & (Wavelength < 1430)))
RF1 <- filter(spectre_0, ((Wavelength > 1428) & (Wavelength < 1430)))
which.min(RF1[Wavelength]<1429)
which.min(RF1["Wavelength"]<1429)
which.max(RF1["Wavelength"]<1429)
which.min(RF1["Wavelength"]>1429)
RF1["Wavelength"]
RF1[1]
RF1[1]<1429
which.min(RF1[1]<1429)
which.min((RF1[1]<1429)==T)
which.min((RF1[1, drop=T]<1429)==T)
vector(RF1[1])
list(RF1[1])
RF1[, 1]
RF1[, 1]<1429
which.min(RF1[, 1]<1429)
which.min((RF1[, 1]<1429)==T)
which((RF1[, 1]<1429)==T)
min(which((RF1[, 1]<1429)==T))
max(which((RF1[, 1]>1429)==T))
spectre_0[, 2]
RF1[, 2]
RF1[, 2][z1]
RF1[, 2, z1]
z1 <- min(which((RF1[, 1]<1429)==T))
RF1[, 2, z1]
RF1[, 2][z1]
x <- 1429
z2 <- min(which((RF1[, 1]<1429)==T))
z1 <- max(which((RF1[, 1]>1429)==T))
y1 <- RF1[, 2][z1]
y2 <- RF1[, 2][z2]
x1 <- RF1[, 1][z1]
x2 <- RF1[, 1][z2]
x <- 1429
y <- y2 + ((y1-y2)/(x1-x2))*(x-x2)
?approx
y <- y2 + ((y1-y2)/(x1-x2))*(x-x2)
approx[RF1[, 1], y = RF1[, 2], xout = x]
approx[x = RF1[, 1], y = RF1[, 2], xout = x]
spectre_0(approx([,1], [,2], x))
spectre_0(approx(spectre_0[,1], spectre_0[,2], x))
approx(x=c(1,2,3,4,6), y=c(2,4,6,8,12), xout=5)
RF1 <- filter(spectre_0, ((Wavelength > 1428) & (Wavelength < 1430)))
RF1
RF1[,1]
RF1[,2]
approx(x=RF1[,1], y=RF1[,2], xout=1429)
approx(x=RF1[,1], y=RF1[,2], xout=1429)
approx(x=RF1[,1], y=RF1[,2], xout=1429)$y
approx(x=spectre_0[,1], y=spectre_0[,2], xout=1429)$y
rm(list(ls()))
rm(list = ls())
library(dplyr)
# Импорт данных в дата-фрейм.
spectre_0 <- read.table(file = "./data/orb0.txt", header = F, sep = " ")
colnames(spectre_0) <- c("Wavelength", "Reflectance")
RF1 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1429)$y
RF2 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1385)$y
RF3 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1443)$y
RCO2 <- RF1/(RF2^0.5*RF3^0.5)
RF_1443 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1443)$y
rm(list = ls())
# Импорт данных в дата-фрейм.
spectre_0 <- read.table(file = "./data/orb0.txt", header = F, sep = " ")
colnames(spectre_0) <- c("Wavelength", "Reflectance")
RF_1429 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1429)$y
RF_1385 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1385)$y
RF_1443 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1443)$y
RCO2 <- RF1/(RF2^0.5*RF3^0.5)
RCO2 <- RF_1429/(RF_1385^0.5*RF_1443^0.5)
RF_1500 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1500)$y
RF_1772 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1772)$y
BDCO2 <- 1.225*(1-RCO2)-0.044
RF_1660 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1660)$y
RF_1660 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1640)$y
RF_1640 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1640)$y
RH2O <- RF_1500/(RF_1385^0.7*RF_1640^0.3)
BDH2O <- 1-RH2O
answer <- df(x=0:789, RCO2=0, BDCO2=0, RH2O=0, BDH2O=0,
row.names=c("Number", "RCO2", "BDCO2", "RH2O", "BDH2O"))
answer <- df(x=0:789, a=0, b=0, c=0, d=0,
row.names=c("Number", "RCO2", "BDCO2", "RH2O", "BDH2O"))
answer <- df(x=0:789, y=0, z=0, a=0, b=0,
row.names=c("Number", "RCO2", "BDCO2", "RH2O", "BDH2O"))
answer <- data.frame(x=0:789, RCO2=0, BDCO2=0, RH2O=0, BDH2O=0,
row.names=c("Number", "RCO2", "BDCO2", "RH2O", "BDH2"))
answer <- data.frame(x=0:789, RCO2=0:789, BDCO2=0:789, RH2O=0:789, BDH2O=0:789,
row.names=c("Number", "RCO2", "BDCO2", "RH2O", "BDH2"))
answer <- data.frame(x=0:789, RCO2=0:789, BDCO2=0:789, RH2O=0:789, BDH2O=0:789)
answer <- data.frame(x=0:789, RCO2=0, BDCO2=0:789, RH2O=0:789, BDH2O=0:789)
answer <- data.frame(x=0:789, RCO2=0, BDCO2=0, RH2O=0, BDH2O=0)
answer <- data.frame(x=0:789, RCO2=0, BDCO2=0, RH2O=0, BDH2O=0,
row.names=c("Number", "RCO2", "BDCO2", "RH2O", "BDH2"))
answer <- data.frame(x=0:789, RCO2=0, BDCO2=0, RH2O=0, BDH2O=0,
row.names=c("RCO2", "BDCO2", "RH2O", "BDH2"))
answer <- data.frame(x=0:789, RCO2=0, BDCO2=0, RH2O=0, BDH2O=0,
row.names=c("RCO2", "BDCO2", "RH2O", "BDH2"))
answer <- data.frame(x=0:789, RCO2=0, BDCO2=0, RH2O=0, BDH2O=0)
View(answer)
View(answer)
answer <- data.frame(Number=0:789, RCO2=0, BDCO2=0, RH2O=0, BDH2O=0)
answer[0,1] <- RF_1429/(RF_1385^0.5*RF_1443^0.5)
row.names=c("Number", "RCO2", "BDCO2", "RH2O", "BDH2"))
answer[0,1] <- RF_1429/(RF_1385^0.5*RF_1443^0.5)
answer$RCO2[0] <- RF_1429/(RF_1385^0.5*RF_1443^0.5)
answer$RCO2
answer$RCO2[1]
answer$RCO2[0]
answer$RCO2[1] <- RF_1429/(RF_1385^0.5*RF_1443^0.5)
rm(list=ls())
library(dplyr)
answer <- data.frame(Number=0:789, RCO2=0, BDCO2=0, RH2O=0, BDH2O=0)
# Импорт данных в дата-фрейм.
spectre_0 <- read.table(file = "./data/orb0.txt", header = F, sep = " ")
colnames(spectre_0) <- c("Wavelength", "Reflectance")
str(spectre_0)     # Проверим правильность типов данных
head(spectre_0)
tail(spectre_0)
summary(spectre_0) # Проверим наличие аномальных значений
any(!complete.cases(spectre_0)) # Проверим наличие пропущенных значений
RF_1429 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1429)$y
RF_1385 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1385)$y
RF_1443 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1443)$y
answer$RCO2[1] <- RF_1429/(RF_1385^0.5*RF_1443^0.5)
answer$BDCO2[1] <- 1.225*(1-RCO2)-0.044
RF_1500 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1500)$y
RF_1640 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1640)$y
answer$RH2O[1] <- RF_1500/(RF_1385^0.7*RF_1640^0.3)
answer$BDH2O[1] <- 1-RH2O
answer$BDCO2[1] <- 1.225*(1-answer$RCO2[1])-0.044
answer$BDH2O[1] <- 1-answer$RH2O[1]
# Импорт данных в дата-фрейм.
paste0("./data/orb", 0, ".txt")
# Импорт данных в дата-фрейм.
for (i in 0:1) {
paste0("./data/orb", i, ".txt")
}
rm(list=ls())
library(dplyr)
answer <- data.frame(Number=0:789, RCO2=0, BDCO2=0, RH2O=0, BDH2O=0)
# Импорт данных в дата-фрейм.
for (i in 0:1) {
spectre_0 <- read.table(file = paste0("./data/orb", i, ".txt"), header = F, sep = " ")
colnames(spectre_0) <- c("Wavelength", "Reflectance")
str(spectre_0)     # Проверим правильность типов данных
head(spectre_0)
tail(spectre_0)
summary(spectre_0) # Проверим наличие аномальных значений
any(!complete.cases(spectre_0)) # Проверим наличие пропущенных значений
RF_1429 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1429)$y
RF_1385 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1385)$y
RF_1443 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1443)$y
answer$RCO2[1] <- RF_1429/(RF_1385^0.5*RF_1443^0.5)
answer$BDCO2[1] <- 1.225*(1-answer$RCO2[1])-0.044
RF_1500 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1500)$y
RF_1640 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1640)$y
answer$RH2O[1] <- RF_1500/(RF_1385^0.7*RF_1640^0.3)
answer$BDH2O[1] <- 1-answer$RH2O[1]
}
# Импорт данных в дата-фрейм.
for (i in 0:1) {
spectre_0 <- read.table(file = paste0("./data/orb", i, ".txt"), header = F, sep = " ")
colnames(spectre_0) <- c("Wavelength", "Reflectance")
str(spectre_0)     # Проверим правильность типов данных
head(spectre_0)
tail(spectre_0)
summary(spectre_0) # Проверим наличие аномальных значений
any(!complete.cases(spectre_0)) # Проверим наличие пропущенных значений
RF_1429 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1429)$y
RF_1385 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1385)$y
RF_1443 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1443)$y
answer$RCO2[i+1] <- RF_1429/(RF_1385^0.5*RF_1443^0.5)
answer$BDCO2[i+1] <- 1.225*(1-answer$RCO2[i+1])-0.044
RF_1500 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1500)$y
RF_1640 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1640)$y
answer$RH2O[i+1] <- RF_1500/(RF_1385^0.7*RF_1640^0.3)
answer$BDH2O[i+1] <- 1-answer$RH2O[i+1]
}
# Импорт данных в дата-фрейм.
for (i in 0:789) {
spectre_0 <- read.table(file = paste0("./data/orb", i, ".txt"), header = F, sep = " ")
colnames(spectre_0) <- c("Wavelength", "Reflectance")
str(spectre_0)     # Проверим правильность типов данных
head(spectre_0)
tail(spectre_0)
summary(spectre_0) # Проверим наличие аномальных значений
any(!complete.cases(spectre_0)) # Проверим наличие пропущенных значений
RF_1429 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1429)$y
RF_1385 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1385)$y
RF_1443 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1443)$y
answer$RCO2[i+1] <- RF_1429/(RF_1385^0.5*RF_1443^0.5)
answer$BDCO2[i+1] <- 1.225*(1-answer$RCO2[i+1])-0.044
RF_1500 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1500)$y
RF_1640 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1640)$y
answer$RH2O[i+1] <- RF_1500/(RF_1385^0.7*RF_1640^0.3)
answer$BDH2O[i+1] <- 1-answer$RH2O[i+1]
}
library(dplyr)
answer <- data.frame(Number=0:789, RCO2=0, BDCO2=0, RH2O=0, BDH2O=0, RF_1385=0)
# Импорт данных в дата-фрейм.
for (i in 0:789) {
spectre_0 <- read.table(file = paste0("./data/orb", i, ".txt"), header = F, sep = " ")
colnames(spectre_0) <- c("Wavelength", "Reflectance")
str(spectre_0)     # Проверим правильность типов данных
head(spectre_0)
tail(spectre_0)
summary(spectre_0) # Проверим наличие аномальных значений
any(!complete.cases(spectre_0)) # Проверим наличие пропущенных значений
RF_1429 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1429)$y
RF_1385 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1385)$y
answer$RF_1385[i+1] <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1385)$y
RF_1443 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1443)$y
answer$RCO2[i+1] <- RF_1429/(RF_1385^0.5*RF_1443^0.5)
answer$BDCO2[i+1] <- 1.225*(1-answer$RCO2[i+1])-0.044
RF_1500 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1500)$y
RF_1640 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1640)$y
answer$RH2O[i+1] <- RF_1500/(RF_1385^0.7*RF_1640^0.3)
answer$BDH2O[i+1] <- 1-answer$RH2O[i+1]
}
# Экспортируем полученные данные
write.csv(answer, file = ./answer.csv)
# Экспортируем полученные данные
write.csv(answer, file = "./answer.csv")
write.table(answer, file = "./answer.txt", sep = "\t")
packageVersion("dplyr")
rm(list = ls())
library(dplyr)
# Создадим дата фрейм, в который будем загружать вычисленные значения коэффициентов
answer <- data.frame(Number=0:789, RCO2=0, BDCO2=0, RH2O=0, BDH2O=0)
# Цикл от 0 до 789, для просмотра всех полученных .txt файлов
for (i in 0:789) {
spectre_0 <- read.table(file = paste0("./data/orb", i, ".txt"), header = F, sep = " ") # Считываем файл
colnames(spectre_0) <- c("Wavelength", "Reflectance") # Даём названия столбцам данных
# Подгрузим один спектр и проверим полученные данные
#  str(spectre_0)     # Проверим правильность типов данных
#  head(spectre_0)
#  tail(spectre_0)
#  summary(spectre_0) # Проверим наличие аномальных значений
#  any(!complete.cases(spectre_0)) # Проверим наличие пропущенных значений
# ^^^ использовалось при первичном анализе первого спектра ^^^
# Посчитаем RF для нужных нам длин волн методом линейной интерполяции
RF_1429 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1429)$y
RF_1385 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1385)$y
RF_1443 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1443)$y
# Посчитаем сами коэффициенты и подгрузим их в итоговый дата фрейм
answer$RCO2[i+1] <- RF_1429/(RF_1385^0.5*RF_1443^0.5)
answer$BDCO2[i+1] <- 1.225*(1-answer$RCO2[i+1])-0.044
# Аналогично, сначала считаем нужные RF, затем сами коэффициенты и отправляем в дата фрейм
RF_1500 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1500)$y
# Отдельный расчёт пика на 1772 нм
RF_1772 <- RF_1385 / 0.98 * 0.85 # 0.98/0.85 - отношение стабильных пиков 1385 и 1772 по данным статьи
answer$RH2O[i+1] <- RF_1500/(RF_1385^0.7*RF_1772^0.3)
answer$BDH2O[i+1] <- 1-answer$RH2O[i+1]
}
# Цикл от 0 до 789, для просмотра всех полученных .txt файлов
for (i in 0:789) {
spectre_0 <- read.table(file = paste0("./data/orb", i, ".txt"), header = F, sep = " ") # Считываем файл
colnames(spectre_0) <- c("Wavelength", "Reflectance") # Даём названия столбцам данных
# Подгрузим один спектр и проверим полученные данные
#  str(spectre_0)     # Проверим правильность типов данных
#  head(spectre_0)
#  tail(spectre_0)
#  summary(spectre_0) # Проверим наличие аномальных значений
#  any(!complete.cases(spectre_0)) # Проверим наличие пропущенных значений
# ^^^ использовалось при первичном анализе первого спектра ^^^
# Посчитаем RF для нужных нам длин волн методом линейной интерполяции
RF_1429 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1429)$y
RF_1385 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1385)$y
RF_1443 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1443)$y
# Посчитаем сами коэффициенты и подгрузим их в итоговый дата фрейм
answer$RCO2[i+1] <- RF_1429/(RF_1385^0.5*RF_1443^0.5)
answer$BDCO2[i+1] <- 1.225*(1-answer$RCO2[i+1])-0.044
# Аналогично, сначала считаем нужные RF, затем сами коэффициенты и отправляем в дата фрейм
RF_1500 <- approx(x=spectre_0[,1], y=spectre_0[,2], xout=1500)$y
# Отдельный расчёт пика на 1772 нм
RF_1772 <- RF_1385 / 0.98 * 0.85 # 0.98/0.85 - отношение стабильных пиков 1385 и 1772 по данным статьи
answer$RH2O[i+1] <- RF_1500/(RF_1385^0.7*RF_1772^0.3)
answer$BDH2O[i+1] <- 1-answer$RH2O[i+1]
}
# Экспортируем полученные данные
write.csv(answer, file = "./answer.csv")                # csv для удобства при дальнейшем анализе преобразованных данных
write.table(answer, file = "./answer.txt", sep = "\t")  # txt для удобной визуальной инспекции полученных результатов
# Подгрузим один спектр и проверим полученные данные
str(answer)     # Проверим правильность типов данных
head(answer)
tail(answer)
summary(answer) # Проверим наличие аномальных значений
